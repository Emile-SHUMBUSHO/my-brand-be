{"version":3,"file":"validateBlog.js","names":["blogSchema","Joi","object","title","string","min","max","required","description","blogBody","exports","validateBlog","req","res","next","validate","body","error","value","errorMsg","details","map","d","message","status","send","validateUniqueBlog","Blog","findOne","existingTitle","existingDescription","existingBlogBody"],"sources":["../../src/middlewares/validateBlog.js"],"sourcesContent":["import Blog from \"../database/models/blog\";\r\nimport Joi from \"joi\";\r\n\r\nconst blogSchema = Joi.object({\r\n  title: Joi.string().min(5).max(30).required(),\r\n  description: Joi.string().min(10).max(300).required(),\r\n  blogBody: Joi.string().min(100).max(1000).required(),\r\n});\r\n\r\n\r\nexports.validateBlog = (req, res, next) => {\r\n  const { error, value } = blogSchema.validate(req.body);\r\n  if (error) {\r\n    let errorMsg = error.details.map(d=> d.message);\r\n    return res.status(400).send({errorMsg});\r\n  }\r\n  next();\r\n};\r\n\r\n\r\nexports.validateUniqueBlog = async (req, res, next) => {\r\n  const existingTitle = await Blog.findOne({ title: req.body.title });\r\n  if (existingTitle) {\r\n    return res\r\n      .status(409)\r\n      .send({\r\n        message: `Blog with title ${existingTitle.title} already exists`,\r\n      });\r\n  }\r\n\r\n  const existingDescription = await Blog.findOne({\r\n    description: req.body.description,\r\n  });\r\n\r\n  if (existingDescription) {\r\n    return res.status(409).send({\r\n      message: `Blog with description ${existingDescription.description} already exists`,\r\n    });\r\n  }\r\n\r\n  const existingBlogBody = await Blog.findOne({ blogBody: req.body.blogBody });\r\n  if (existingBlogBody) {\r\n    return res.status(409).send({\r\n      message: `Blog with ${existingBlogBody.blogBody} already exists`,\r\n    });\r\n  }\r\n  next();\r\n};\r\n"],"mappings":";;;AAAA;AACA;AAAsB;AAAA,+CAAtB;AAAA;AAAA;AAEA,IAAMA,UAAU,GAAGC,eAAG,CAACC,MAAM,CAAC;EAC5BC,KAAK,EAAEF,eAAG,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACC,QAAQ,EAAE;EAC7CC,WAAW,EAAEP,eAAG,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,CAACC,QAAQ,EAAE;EACrDE,QAAQ,EAAER,eAAG,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,IAAI,CAAC,CAACC,QAAQ;AACpD,CAAC,CAAC;AAGFG,OAAO,CAACC,YAAY,GAAG,UAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAK;EACzC,2BAAyBd,UAAU,CAACe,QAAQ,CAACH,GAAG,CAACI,IAAI,CAAC;IAA9CC,KAAK,wBAALA,KAAK;IAAEC,KAAK,wBAALA,KAAK;EACpB,IAAID,KAAK,EAAE;IACT,IAAIE,QAAQ,GAAGF,KAAK,CAACG,OAAO,CAACC,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAGA,CAAC,CAACC,OAAO;IAAA,EAAC;IAC/C,OAAOV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACN,QAAQ,EAARA;IAAQ,CAAC,CAAC;EACzC;EACAL,IAAI,EAAE;AACR,CAAC;AAGDJ,OAAO,CAACgB,kBAAkB;EAAA,sEAAG,iBAAOd,GAAG,EAAEC,GAAG,EAAEC,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACpBa,gBAAI,CAACC,OAAO,CAAC;YAAEzB,KAAK,EAAES,GAAG,CAACI,IAAI,CAACb;UAAM,CAAC,CAAC;QAAA;UAA7D0B,aAAa;UAAA,KACfA,aAAa;YAAA;YAAA;UAAA;UAAA,iCACRhB,GAAG,CACPW,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;YACJF,OAAO,4BAAqBM,aAAa,CAAC1B,KAAK;UACjD,CAAC,CAAC;QAAA;UAAA;UAAA,OAG4BwB,gBAAI,CAACC,OAAO,CAAC;YAC7CpB,WAAW,EAAEI,GAAG,CAACI,IAAI,CAACR;UACxB,CAAC,CAAC;QAAA;UAFIsB,mBAAmB;UAAA,KAIrBA,mBAAmB;YAAA;YAAA;UAAA;UAAA,iCACdjB,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAC1BF,OAAO,kCAA2BO,mBAAmB,CAACtB,WAAW;UACnE,CAAC,CAAC;QAAA;UAAA;UAAA,OAG2BmB,gBAAI,CAACC,OAAO,CAAC;YAAEnB,QAAQ,EAAEG,GAAG,CAACI,IAAI,CAACP;UAAS,CAAC,CAAC;QAAA;UAAtEsB,gBAAgB;UAAA,KAClBA,gBAAgB;YAAA;YAAA;UAAA;UAAA,iCACXlB,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAC1BF,OAAO,sBAAeQ,gBAAgB,CAACtB,QAAQ;UACjD,CAAC,CAAC;QAAA;UAEJK,IAAI,EAAE;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACR;EAAA;IAAA;EAAA;AAAA"}