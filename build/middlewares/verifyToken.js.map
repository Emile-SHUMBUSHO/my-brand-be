{"version":3,"file":"verifyToken.js","names":["verifyToken","req","res","next","token","headers","status","send","message","decoded","jwt","verify","process","env","SECRET_KEY","user","error"],"sources":["../../src/middlewares/verifyToken.js"],"sourcesContent":["import status from \"../config/status\";\r\nimport * as helper from \"../helpers\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport const verifyToken = (req, res, next) => {\r\n  const token = req.headers[\"x-access-token\"];\r\n  if (!token) return res.status(401).send({ message: \"No token provided.\" });\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.SECRET_KEY);\r\n    req.user = decoded;\r\n    next();\r\n  } catch (error) {\r\n    return res.status(401).send({ message: \"Invalid token.\" });\r\n  }\r\n};\r\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AAA+B;AAAA;AAAA;AAExB,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAIC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAK;EAC7C,IAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAAC,gBAAgB,CAAC;EAC3C,IAAI,CAACD,KAAK,EAAE,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE;EAAqB,CAAC,CAAC;EAE1E,IAAI;IACF,IAAMC,OAAO,GAAGC,wBAAG,CAACC,MAAM,CAACP,KAAK,EAAEQ,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACzDb,GAAG,CAACc,IAAI,GAAGN,OAAO;IAClBN,IAAI,EAAE;EACR,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,OAAOd,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAiB,CAAC,CAAC;EAC5D;AACF,CAAC;AAAC"}