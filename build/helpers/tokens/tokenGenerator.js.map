{"version":3,"file":"tokenGenerator.js","names":["dotenv","config","payload","expiresIn","isValidPayload","Object","keys","length","jwt","sign","process","env","SECRET_KEY"],"sources":["../../../src/helpers/tokens/tokenGenerator.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\n// @param {object} payload the paload to encode the token\r\n// @param {object} expiresIn the expiration time of the token\r\n// @param {string} the generated token\r\n\r\nexport default (payload = {}, expiresIn = { expiresIn: \"1d\" }) => {\r\n  let isValidPayload = true;\r\n  if (typeof payload === \"number\") {\r\n    isValidPayload = false;\r\n  } else if (typeof payload === \"null\") {\r\n    isValidPayload = false;\r\n  } else if (typeof payload === \"object\" && !Object.keys(payload).length) {\r\n    isValidPayload = false;\r\n  }\r\n  return isValidPayload\r\n    ? jwt.sign(payload, process.env.SECRET_KEY, expiresIn)\r\n    : null;\r\n};\r\n"],"mappings":";;;;;;AAAA;AACA;AAA4B;AAAA;AAE5BA,kBAAM,CAACC,MAAM,EAAE;;AAEf;AACA;AACA;AAAA,eAEe,oBAAmD;EAAA,IAAlDC,OAAO,uEAAG,CAAC,CAAC;EAAA,IAAEC,SAAS,uEAAG;IAAEA,SAAS,EAAE;EAAK,CAAC;EAC3D,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;IAC/BE,cAAc,GAAG,KAAK;EACxB,CAAC,MAAM,IAAI,OAAOF,OAAO,KAAK,MAAM,EAAE;IACpCE,cAAc,GAAG,KAAK;EACxB,CAAC,MAAM,IAAI,QAAOF,OAAO,MAAK,QAAQ,IAAI,CAACG,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,MAAM,EAAE;IACtEH,cAAc,GAAG,KAAK;EACxB;EACA,OAAOA,cAAc,GACjBI,wBAAG,CAACC,IAAI,CAACP,OAAO,EAAEQ,OAAO,CAACC,GAAG,CAACC,UAAU,EAAET,SAAS,CAAC,GACpD,IAAI;AACV,CAAC;AAAA"}